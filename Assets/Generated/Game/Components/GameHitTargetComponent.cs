//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public HitTarget hitTarget { get { return (HitTarget)GetComponent(GameComponentsLookup.HitTarget); } }
    public bool hasHitTarget { get { return HasComponent(GameComponentsLookup.HitTarget); } }

    public void AddHitTarget(UnityEngine.Vector3 newHitTargetPosition, GameEntity newHitTarget) {
        var index = GameComponentsLookup.HitTarget;
        var component = (HitTarget)CreateComponent(index, typeof(HitTarget));
        component.hitTargetPosition = newHitTargetPosition;
        component.hitTarget = newHitTarget;
        AddComponent(index, component);
    }

    public void ReplaceHitTarget(UnityEngine.Vector3 newHitTargetPosition, GameEntity newHitTarget) {
        var index = GameComponentsLookup.HitTarget;
        var component = (HitTarget)CreateComponent(index, typeof(HitTarget));
        component.hitTargetPosition = newHitTargetPosition;
        component.hitTarget = newHitTarget;
        ReplaceComponent(index, component);
    }

    public void RemoveHitTarget() {
        RemoveComponent(GameComponentsLookup.HitTarget);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherHitTarget;

    public static Entitas.IMatcher<GameEntity> HitTarget {
        get {
            if (_matcherHitTarget == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.HitTarget);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherHitTarget = matcher;
            }

            return _matcherHitTarget;
        }
    }
}
