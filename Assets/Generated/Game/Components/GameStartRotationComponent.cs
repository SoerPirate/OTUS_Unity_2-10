//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public StartRotationComponent startRotation { get { return (StartRotationComponent)GetComponent(GameComponentsLookup.StartRotation); } }
    public bool hasStartRotation { get { return HasComponent(GameComponentsLookup.StartRotation); } }

    public void AddStartRotation(UnityEngine.Quaternion newStartRotation) {
        var index = GameComponentsLookup.StartRotation;
        var component = (StartRotationComponent)CreateComponent(index, typeof(StartRotationComponent));
        component.startRotation = newStartRotation;
        AddComponent(index, component);
    }

    public void ReplaceStartRotation(UnityEngine.Quaternion newStartRotation) {
        var index = GameComponentsLookup.StartRotation;
        var component = (StartRotationComponent)CreateComponent(index, typeof(StartRotationComponent));
        component.startRotation = newStartRotation;
        ReplaceComponent(index, component);
    }

    public void RemoveStartRotation() {
        RemoveComponent(GameComponentsLookup.StartRotation);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherStartRotation;

    public static Entitas.IMatcher<GameEntity> StartRotation {
        get {
            if (_matcherStartRotation == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.StartRotation);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherStartRotation = matcher;
            }

            return _matcherStartRotation;
        }
    }
}
